;****** Include Files ******
.include "m8535def.inc"


;****** Initialize GPR ******
.def TEMPR1 = R16
.def INPUT_DATA = R17
.def OUTPUT_DATA_TEMP = R18
.def OUTPUT_DATA = R19
.def INPUT_ROW = R20
.def DIAL_CONTROL = R21
.def REPETITION_CONTROL = R22


;****** Initialize CONST ******

;*** PORT ***
.equ LED1 = (1<<PORTB3)
.equ LED2 = (1<<PORTD4)

;*** KEYBOARD ***
.equ KEY_IN_1 = PORTB4
.equ KEY_IN_2 = PORTB5
.equ KEY_IN_3 = PORTB6
.equ KEY_IN_4 = PORTB7
.equ KEY_OUTPUT_MODE = (1<<KEY_IN_1)|(1<<KEY_IN_2)|(1<<KEY_IN_3)|(1<<KEY_IN_4)

.equ KEY_OUT_1 = PIND5
.equ KEY_OUT_2 = PIND6
.equ KEY_OUT_3 = PIND7
.equ KEY_OUTPUT_DEFAULT = (1<<KEY_OUT_1)|(1<<KEY_OUT_2)|(1<<KEY_OUT_3)


;****** Interrup Vector ******
.org 0x0
	RJMP RESET
	RETI;	RJMP EXT_INT0
	RETI;	RJMP EXT_INT1
	RETI;	RJMP TIM2_COMP
	RETI;	RJMP TIM2_OVF
	RETI;	RJMP TIM1_CAPT
	RETI;	RJMP TIM1_COMPA
	RETI;	RJMP TIM1_COMPB
	RETI;	RJMP TIM1_OVF
	RETI;	RJMP TIM0_OVF
	RETI;	RJMP SPI_STC
	RETI;	RJMP USART_RXC
	RETI;	RJMP USART_DRE
	RETI;	RJMP USART_TXC
	RETI;	RJMP ADC_COMP
	RETI;	RJMP EE_READY
	RETI;	RJMP ANA_COMP
	RETI;	RJMP TWI
	RETI;	RJMP INT2
	RETI;	RJMP TIM0_COMP
	RETI;	RJMP SPM_RDY

.org 0x15
	RESET:
		;	Initialize Stack
		LDI TEMPR1, LOW(RAMEND)
		OUT SPL, TEMPR1
		LDI TEMPR1, HIGH(RAMEND)
		OUT SPH, TEMPR1

		;	Initialize PORTB3 As Output For 1st LED, Initially Turned Off
		IN TEMPR1, DDRB
		SBR TEMPR1, LED1
		OUT DDRB, TEMPR1
		IN TEMPR1, PORTB
		SBR TEMPR1, LED1
		OUT PORTB, TEMPR1

		;	Initialize PORTD4 As Output For 2nd LED, Initially Turned Off
		IN TEMPR1, DDRD
		SBR TEMPR1, LED2
		OUT DDRD, TEMPR1
		IN TEMPR1, PORTD
		SBR TEMPR1, LED2
		OUT PORTD, TEMPR1

		;	Initialize PORTB4:7 As Outputs For Keyboard
		IN TEMPR1, DDRB
		SBR TEMPR1, KEY_OUTPUT_MODE
		OUT DDRB, TEMPR1

		; Start Sending 1 To Keyboard Rows From 1st Row
		LDI INPUT_ROW, 0x1
		LDI DIAL_CONTROL, KEY_OUTPUT_DEFAULT
		MOV REPETITION_CONTROL, DIAL_CONTROL


;****** Main Program ******
	LOOP:
		NO_OR_LONG_PRESSED_KEY:
			RCALL SET_INPUT_DATA
			LONG_PRESSED_KEY:
				MOV REPETITION_CONTROL, DIAL_CONTROL
				MOV OUTPUT_DATA, OUTPUT_DATA_TEMP
				OUT PORTB, INPUT_DATA
				LDI DIAL_CONTROL, KEY_OUTPUT_DEFAULT
				IN OUTPUT_DATA_TEMP, PIND
				AND DIAL_CONTROL, OUTPUT_DATA_TEMP
				CPI DIAL_CONTROL, KEY_OUTPUT_DEFAULT
				BRNE LONG_PRESSED_KEY
				CP	DIAL_CONTROL, REPETITION_CONTROL
				BREQ NO_OR_LONG_PRESSED_KEY	
		RCALL PRESSED_KEY 

		RJMP LOOP;	Start LOOP Again


;****** SubPrograms ******

;*** Set Input Data In Keyboard ***
	SET_INPUT_DATA:
		SET_INPUT_DATA_BEGIN:
			SBRC INPUT_ROW, 0
			RJMP ZEROin1
			SBRC INPUT_ROW, 1
			RJMP ZEROin2
			SBRC INPUT_ROW, 2
			RJMP ZEROin3
			SBRC INPUT_ROW, 3
			RJMP ZEROin4

			ZEROin1:
				LDI INPUT_DATA, 0xE0
				CLR INPUT_ROW
				LDI INPUT_ROW, 0x2
				RJMP SET_INPUT_DATA_END

			ZEROin2:
				LDI INPUT_DATA, 0xD0
				CLR INPUT_ROW
				LDI INPUT_ROW, 0x4
				RJMP SET_INPUT_DATA_END

			ZEROin3:
				LDI INPUT_DATA, 0xB0
				CLR INPUT_ROW
				LDI INPUT_ROW, 0x8
				RJMP SET_INPUT_DATA_END

			ZEROin4:
				LDI INPUT_DATA, 0x70
				CLR INPUT_ROW
				LDI INPUT_ROW, 0x1

		SET_INPUT_DATA_END:
			RET;	SubProgram Return


;*** Input Row Detection ***
	PRESSED_KEY:
		PRESSED_KEY_DETECTION_BEGIN:			
			SBRC INPUT_ROW, 0
			RJMP KEYS_SOS
			SBRC INPUT_ROW, 1
			RJMP KEYS_123
			SBRC INPUT_ROW, 2
			RJMP KEYS_456
			SBRC INPUT_ROW, 3
			RJMP KEYS_789

			;** 1st Row Keyboards **
			KEYS_123:
				SBRS OUTPUT_DATA, 5
				;	KEY_1
				RJMP ONE_LED_TURN_ON
				SBRS OUTPUT_DATA, 6
				;	KEY_2
				RJMP BOTH_LEDS_TURN_ON
				SBRS OUTPUT_DATA, 7
				;	KEY_3
				RJMP ONE_LED_TURN_ON
				RJMP PRESSED_KEY_DETECTION_END

			;** 2nd Row Keyboards **
			KEYS_456:
				SBRS OUTPUT_DATA, 5
				;	KEY_4
				RJMP BOTH_LEDS_TURN_ON
				SBRS OUTPUT_DATA, 6
				;	KEY_5
				RJMP ONE_LED_TURN_ON
				SBRS OUTPUT_DATA, 7
				;	KEY_6
				RJMP BOTH_LEDS_TURN_ON
				RJMP PRESSED_KEY_DETECTION_END

			;** 3rd Row Keyboards **
			KEYS_789:
				SBRS OUTPUT_DATA, 5
				;	KEY_7
				RJMP ONE_LED_TURN_ON
				SBRS OUTPUT_DATA, 6
				;	KEY_8
				RJMP BOTH_LEDS_TURN_ON
				SBRS OUTPUT_DATA, 7
				;	KEY_9
				RJMP ONE_LED_TURN_ON
				RJMP PRESSED_KEY_DETECTION_END

			;** 4st Row Keyboards **
			KEYS_SOS:
				SBRS OUTPUT_DATA, 5
				;	KEY_ASTERISK
				RJMP BOTH_LEDS_TURN_OFF
				SBRS OUTPUT_DATA, 6
				;	KEY_0
				RJMP BOTH_LEDS_TURN_ON
				SBRS OUTPUT_DATA, 7
				;	KEY_HASHTAG
				RJMP BOTH_LEDS_TURN_OFF
				RJMP PRESSED_KEY_DETECTION_END

				ONE_LED_TURN_ON:
					IN TEMPR1, PORTB
					CBR TEMPR1, LED1
					OUT PORTB, TEMPR1
					IN TEMPR1, PORTD
					SBR TEMPR1, LED2
					OUT PORTD, TEMPR1
					RJMP PRESSED_KEY_DETECTION_END

				BOTH_LEDS_TURN_ON:
					IN TEMPR1, PORTB
					CBR TEMPR1, LED1
					OUT PORTB, TEMPR1
					IN TEMPR1, PORTD
					CBR TEMPR1, LED2
					OUT PORTD, TEMPR1
					RJMP PRESSED_KEY_DETECTION_END
	
				BOTH_LEDS_TURN_OFF:
					IN TEMPR1, PORTB
					SBR TEMPR1, LED1
					OUT PORTB, TEMPR1
					IN TEMPR1, PORTD
					SBR TEMPR1, LED2
					OUT PORTD, TEMPR1

		PRESSED_KEY_DETECTION_END:
			RET;	SubProgram Return
